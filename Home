import '/auth/firebase_auth/auth_util.dart';
import '/backend/backend.dart';
import '/components/bottomnavbar_beef_widget.dart';
import '/components/post_widget.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import 'dart:ui';
import '/index.dart';
import 'package:badges/badges.dart' as badges;
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';

import 'home_model.dart';
export 'home_model.dart';

class HomeWidget extends StatefulWidget {
  const HomeWidget({super.key});

  static String routeName = 'Home';
  static String routePath = 'Home';

  @override
  State<HomeWidget> createState() => _HomeWidgetState();
}

class _HomeWidgetState extends State<HomeWidget> {
  late HomeModel _model;

  final scaffoldKey = GlobalKey<ScaffoldState>();

  @override
  void initState() {
    super.initState();
    _model = createModel(context, () => HomeModel());

    WidgetsBinding.instance.addPostFrameCallback((_) => safeSetState(() {}));
  }

  @override
  void dispose() {
    _model.dispose();

    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    context.watch<FFAppState>();

    return GestureDetector(
      onTap: () {
        FocusScope.of(context).unfocus();
        FocusManager.instance.primaryFocus?.unfocus();
      },
      child: Scaffold(
        key: scaffoldKey,
        backgroundColor: FlutterFlowTheme.of(context).primaryBackground,
        floatingActionButton: Align(
          alignment: AlignmentDirectional(-1, 1),
          child: Padding(
            padding: EdgeInsetsDirectional.fromSTEB(25, 0, 0, 60),
            child: FloatingActionButton(
              onPressed: () async {
                context.pushNamed(CreatepostWidget.routeName);
              },
              backgroundColor: FlutterFlowTheme.of(context).warning,
              elevation: 8,
              child: Icon(
                Icons.add_rounded,
                color: FlutterFlowTheme.of(context).info,
                size: 24,
              ),
            ),
          ),
        ),
        appBar: PreferredSize(
          preferredSize: Size.fromHeight(80),
          child: AppBar(
            backgroundColor: FlutterFlowTheme.of(context).primary,
            automaticallyImplyLeading: false,
            title: Row(
              mainAxisSize: MainAxisSize.max,
              children: [
                Stack(
                  children: [
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(15, 20, 0, 0),
                      child: Text(
                        'HOME',
                        style: FlutterFlowTheme.of(context)
                            .headlineMedium
                            .override(
                              fontFamily: 'Rubik',
                              color: FlutterFlowTheme.of(context)
                                  .secondaryBackground,
                              fontSize: 16,
                              letterSpacing: 0.0,
                              fontWeight: FontWeight.w500,
                              useGoogleFonts:
                                  GoogleFonts.asMap().containsKey('Rubik'),
                            ),
                      ),
                    ),
                  ],
                ),
                Padding(
                  padding: EdgeInsetsDirectional.fromSTEB(90, 0, 90, 40),
                  child: ClipRRect(
                    borderRadius: BorderRadius.circular(8),
                    child: Image.asset(
                      'assets/images/Asset_8-8.png',
                      width: 56,
                      height: 41,
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
              ],
            ),
            actions: [
              Padding(
                padding: EdgeInsetsDirectional.fromSTEB(0, 20, 20, 0),
                child: FutureBuilder<int>(
                  future: queryNotificationsRecordCount(
                    queryBuilder: (notificationsRecord) => notificationsRecord
                        .where(
                          'made_to',
                          isEqualTo: currentUserReference,
                        )
                        .where(
                          'is_read',
                          isEqualTo: false,
                        ),
                  ),
                  builder: (context, snapshot) {
                    // Customize what your widget looks like when it's loading.
                    if (!snapshot.hasData) {
                      return Center(
                        child: Padding(
                          padding: EdgeInsetsDirectional.fromSTEB(1, 1, 1, 1),
                          child: LinearProgressIndicator(
                            color: FlutterFlowTheme.of(context).primary,
                          ),
                        ),
                      );
                    }
                    int badgeCount = snapshot.data!;

                    return InkWell(
                      splashColor: Colors.transparent,
                      focusColor: Colors.transparent,
                      hoverColor: Colors.transparent,
                      highlightColor: Colors.transparent,
                      onTap: () async {
                        context.pushNamed(NotificationsWidget.routeName);

                        FFAppState().notificationSeen = true;
                        safeSetState(() {});
                      },
                      child: badges.Badge(
                        badgeContent: Text(
                          valueOrDefault<String>(
                            formatNumber(
                              badgeCount,
                              formatType: FormatType.compact,
                            ),
                            '0',
                          ),
                          style: FlutterFlowTheme.of(context)
                              .titleSmall
                              .override(
                                fontFamily: FlutterFlowTheme.of(context)
                                    .titleSmallFamily,
                                color: Colors.white,
                                letterSpacing: 0.0,
                                useGoogleFonts: GoogleFonts.asMap().containsKey(
                                    FlutterFlowTheme.of(context)
                                        .titleSmallFamily),
                              ),
                        ),
                        showBadge: (badgeCount >= 1) &&
                            (FFAppState().notificationSeen == false),
                        shape: badges.BadgeShape.circle,
                        badgeColor: FlutterFlowTheme.of(context).error,
                        elevation: 4,
                        padding: EdgeInsetsDirectional.fromSTEB(8, 8, 8, 8),
                        position: badges.BadgePosition.topEnd(),
                        animationType: badges.BadgeAnimationType.scale,
                        toAnimate: true,
                        child: Icon(
                          Icons.notifications_sharp,
                          color:
                              FlutterFlowTheme.of(context).secondaryBackground,
                          size: 35,
                        ),
                      ),
                    );
                  },
                ),
              ),
              Padding(
                padding: EdgeInsetsDirectional.fromSTEB(0, 20, 20, 0),
                child: InkWell(
                  splashColor: Colors.transparent,
                  focusColor: Colors.transparent,
                  hoverColor: Colors.transparent,
                  highlightColor: Colors.transparent,
                  onTap: () async {
                    context.pushNamed(ChatlistWidget.routeName);
                  },
                  child: Icon(
                    Icons.chat_bubble,
                    color: FlutterFlowTheme.of(context).secondaryBackground,
                    size: 28,
                  ),
                ),
              ),
            ],
            centerTitle: false,
            toolbarHeight: 100,
            elevation: 1,
          ),
        ),
        body: Stack(
          children: [
            Padding(
              padding: EdgeInsetsDirectional.fromSTEB(0, 5, 0, 0),
              child: SingleChildScrollView(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Align(
                      alignment: AlignmentDirectional(0, 0),
                      child: Padding(
                        padding: EdgeInsetsDirectional.fromSTEB(16, 20, 16, 0),
                        child: Container(
                          width: MediaQuery.sizeOf(context).width * 0.843,
                          decoration: BoxDecoration(
                            color: FlutterFlowTheme.of(context)
                                .secondaryBackground,
                            boxShadow: [
                              BoxShadow(
                                blurRadius: 4,
                                color: Color(0x25090F13),
                                offset: Offset(
                                  0.0,
                                  2,
                                ),
                              )
                            ],
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Padding(
                            padding:
                                EdgeInsetsDirectional.fromSTEB(12, 12, 12, 16),
                            child: Column(
                              mainAxisSize: MainAxisSize.max,
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Padding(
                                  padding: EdgeInsetsDirectional.fromSTEB(
                                      0, 10, 0, 0),
                                  child: Text(
                                    'Summary of your weekly stats',
                                    style: FlutterFlowTheme.of(context)
                                        .titleMedium
                                        .override(
                                          fontFamily: 'Rubik',
                                          color: FlutterFlowTheme.of(context)
                                              .secondaryText,
                                          letterSpacing: 0.0,
                                          fontWeight: FontWeight.w500,
                                          useGoogleFonts: GoogleFonts.asMap()
                                              .containsKey('Rubik'),
                                        ),
                                  ),
                                ),
                                Divider(
                                  height: 24,
                                  thickness: 1.5,
                                  color: FlutterFlowTheme.of(context).accent4,
                                ),
                                Row(
                                  mainAxisSize: MainAxisSize.max,
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceAround,
                                  children: [
                                    Flexible(
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Activities',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .bodyMediumFamily,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  letterSpacing: 0.0,
                                                  useGoogleFonts: GoogleFonts
                                                          .asMap()
                                                      .containsKey(
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .bodyMediumFamily),
                                                ),
                                          ),
                                          AuthUserStreamWidget(
                                            builder: (context) => Text(
                                              valueOrDefault<String>(
                                                valueOrDefault(
                                                        currentUserDocument
                                                            ?.lifetimeGrams,
                                                        0.0)
                                                    .toString(),
                                                '12',
                                              ),
                                              style: FlutterFlowTheme.of(
                                                      context)
                                                  .displaySmall
                                                  .override(
                                                    fontFamily: 'Rubik',
                                                    color: FlutterFlowTheme.of(
                                                            context)
                                                        .secondaryText,
                                                    fontSize: 30,
                                                    letterSpacing: 0.0,
                                                    fontWeight: FontWeight.bold,
                                                    useGoogleFonts:
                                                        GoogleFonts.asMap()
                                                            .containsKey(
                                                                'Rubik'),
                                                  ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    Flexible(
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Hours',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .bodyMediumFamily,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  letterSpacing: 0.0,
                                                  useGoogleFonts: GoogleFonts
                                                          .asMap()
                                                      .containsKey(
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .bodyMediumFamily),
                                                ),
                                          ),
                                          AuthUserStreamWidget(
                                            builder: (context) => Text(
                                              valueOrDefault<String>(
                                                (currentUserDocument?.posts
                                                            ?.toList() ??
                                                        [])
                                                    .length
                                                    .toString(),
                                                '32.2',
                                              ),
                                              style: FlutterFlowTheme.of(
                                                      context)
                                                  .displaySmall
                                                  .override(
                                                    fontFamily: 'Rubik',
                                                    color: FlutterFlowTheme.of(
                                                            context)
                                                        .secondaryText,
                                                    fontSize: 30,
                                                    letterSpacing: 0.0,
                                                    fontWeight: FontWeight.bold,
                                                    useGoogleFonts:
                                                        GoogleFonts.asMap()
                                                            .containsKey(
                                                                'Rubik'),
                                                  ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    Flexible(
                                      child: Column(
                                        mainAxisSize: MainAxisSize.max,
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          Text(
                                            'Avg. Hours',
                                            style: FlutterFlowTheme.of(context)
                                                .bodyMedium
                                                .override(
                                                  fontFamily:
                                                      FlutterFlowTheme.of(
                                                              context)
                                                          .bodyMediumFamily,
                                                  color: FlutterFlowTheme.of(
                                                          context)
                                                      .secondaryText,
                                                  letterSpacing: 0.0,
                                                  useGoogleFonts: GoogleFonts
                                                          .asMap()
                                                      .containsKey(
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .bodyMediumFamily),
                                                ),
                                          ),
                                          Row(
                                            mainAxisSize: MainAxisSize.max,
                                            crossAxisAlignment:
                                                CrossAxisAlignment.center,
                                            children: [
                                              Text(
                                                '4.6',
                                                style: FlutterFlowTheme.of(
                                                        context)
                                                    .displaySmall
                                                    .override(
                                                      fontFamily: 'Rubik',
                                                      color:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .secondaryText,
                                                      fontSize: 30,
                                                      letterSpacing: 0.0,
                                                      fontWeight:
                                                          FontWeight.bold,
                                                      useGoogleFonts:
                                                          GoogleFonts.asMap()
                                                              .containsKey(
                                                                  'Rubik'),
                                                    ),
                                              ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    ),
                                  ],
                                ),
                              ],
                            ),
                          ),
                        ),
                      ),
                    ),
                    Padding(
                      padding: EdgeInsetsDirectional.fromSTEB(30, 30, 0, 0),
                      child: Text(
                        'Welcome back!',
                        style:
                            FlutterFlowTheme.of(context).titleMedium.override(
                                  fontFamily: 'Rubik',
                                  color: FlutterFlowTheme.of(context).primary,
                                  fontSize: 24,
                                  letterSpacing: 0.0,
                                  fontWeight: FontWeight.w800,
                                  useGoogleFonts:
                                      GoogleFonts.asMap().containsKey('Rubik'),
                                ),
                      ),
                    ),
                    StreamBuilder<List<PostsRecord>>(
                      stream: _model.postsQuery(
                        requestFn: () => queryPostsRecord(
                          queryBuilder: (postsRecord) => postsRecord
                              .orderBy('time_posted', descending: true),
                          limit: 10,
                        ),
                      ),
                      builder: (context, snapshot) {
                        // Customize what your widget looks like when it's loading.
                        if (!snapshot.hasData) {
                          return Center(
                            child: Padding(
                              padding:
                                  EdgeInsetsDirectional.fromSTEB(1, 1, 1, 1),
                              child: LinearProgressIndicator(
                                color: FlutterFlowTheme.of(context).primary,
                              ),
                            ),
                          );
                        }
                        List<PostsRecord> postsListViewFeedPostsRecordList =
                            snapshot.data!;
                        if (postsListViewFeedPostsRecordList.isEmpty) {
                          return Image.asset(
                            'assets/images/like_button.png',
                          );
                        }

                        return RefreshIndicator(
                          color: FlutterFlowTheme.of(context).primary,
                          onRefresh: () async {},
                          child: ListView.builder(
                            padding: EdgeInsets.zero,
                            primary: false,
                            shrinkWrap: true,
                            scrollDirection: Axis.vertical,
                            itemCount: postsListViewFeedPostsRecordList.length,
                            itemBuilder: (context, postsListViewFeedIndex) {
                              final postsListViewFeedPostsRecord =
                                  postsListViewFeedPostsRecordList[
                                      postsListViewFeedIndex];
                              return Padding(
                                padding: EdgeInsetsDirectional.fromSTEB(
                                    15, 0, 15, 15),
                                child: wrapWithModel(
                                  model: _model.postModels.getModel(
                                    postsListViewFeedPostsRecord.reference.id,
                                    postsListViewFeedIndex,
                                  ),
                                  updateCallback: () => safeSetState(() {}),
                                  child: PostWidget(
                                    key: Key(
                                      'Keymz7_${postsListViewFeedPostsRecord.reference.id}',
                                    ),
                                    userPhotoRef:
                                        postsListViewFeedPostsRecord.postUser,
                                    userDisplayNameRef: _model.postProfile,
                                    postCut: valueOrDefault<String>(
                                      postsListViewFeedPostsRecord.postCut,
                                      'Unknown cut',
                                    ),
                                    postDoneness: valueOrDefault<String>(
                                      postsListViewFeedPostsRecord.postDoneness,
                                      'Unknown doneness',
                                    ),
                                    postLocationName:
                                        postsListViewFeedPostsRecord
                                            .postLocationName,
                                    postLocationCity: valueOrDefault<String>(
                                      postsListViewFeedPostsRecord
                                          .postLocationCity,
                                      'London',
                                    ),
                                    time: valueOrDefault<String>(
                                      dateTimeFormat(
                                        "relative",
                                        postsListViewFeedPostsRecord.timePosted,
                                        locale: FFLocalizations.of(context)
                                            .languageCode,
                                      ),
                                      'Unknown time ago',
                                    ),
                                    postTitle: valueOrDefault<String>(
                                      postsListViewFeedPostsRecord.postTitle,
                                      'Untitled',
                                    ),
                                    postCookTIme: valueOrDefault<double>(
                                      postsListViewFeedPostsRecord
                                          .postCookingTime,
                                      5.0,
                                    ),
                                    postGrams: valueOrDefault<double>(
                                      postsListViewFeedPostsRecord.postWeight,
                                      200.0,
                                    ),
                                    rating: postsListViewFeedPostsRecord.rating,
                                    postPhotoPath:
                                        postsListViewFeedPostsRecord.postPhoto,
                                    numLikes: valueOrDefault<String>(
                                      formatNumber(
                                        postsListViewFeedPostsRecord
                                            .postLikedBy.length,
                                        formatType: FormatType.compact,
                                      ),
                                      'No',
                                    ),
                                    likedPostRef:
                                        postsListViewFeedPostsRecord.reference,
                                    numLikesQuery: postsListViewFeedPostsRecord
                                        .postLikedBy.length,
                                    numComments: formatNumber(
                                      postsListViewFeedPostsRecord.numComments,
                                      formatType: FormatType.compact,
                                    ),
                                    numCommentsQuery:
                                        postsListViewFeedPostsRecord
                                            .numComments,
                                    isLiked: postsListViewFeedPostsRecord
                                        .postLikedBy
                                        .contains(currentUserReference),
                                  ),
                                ),
                              );
                            },
                          ),
                        );
                      },
                    ),
                    Align(
                      alignment: AlignmentDirectional(0, 0),
                      child: Container(
                        width: 100,
                        height: 100,
                        decoration: BoxDecoration(
                          color: Color(0x00FFFFFF),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Align(
              alignment: AlignmentDirectional(0, 0),
              child: wrapWithModel(
                model: _model.bottomnavbarBeefModel,
                updateCallback: () => safeSetState(() {}),
                child: BottomnavbarBeefWidget(
                  page: 'home',
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
